{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const routeService = {\n  // Get all routes for current user\n  async getRoutes(params = {}) {\n    const response = await api.get('/routes', {\n      params\n    });\n    return response.data.data;\n  },\n  // Get single route by ID\n  async getRoute(id) {\n    const response = await api.get(`/routes/${id}`);\n    return response.data.data.route;\n  },\n  // Create new route\n  async createRoute(routeData) {\n    const response = await api.post('/routes', routeData);\n    return response.data.data.route;\n  },\n  // Update route\n  async updateRoute(id, routeData) {\n    const response = await api.put(`/routes/${id}`, routeData);\n    return response.data.data.route;\n  },\n  // Delete route\n  async deleteRoute(id) {\n    const response = await api.delete(`/routes/${id}`);\n    return response.data;\n  },\n  // Get route statistics\n  async getRouteStats() {\n    const response = await api.get('/routes/stats');\n    return response.data.data.stats;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","routeService","getRoutes","params","response","get","data","getRoute","id","route","createRoute","routeData","post","updateRoute","put","deleteRoute","delete","getRouteStats","stats"],"sources":["C:/Users/Gal/Desktop/Trip/Trip/client/src/services/routeService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const routeService = {\n  // Get all routes for current user\n  async getRoutes(params = {}) {\n    const response = await api.get('/routes', { params });\n    return response.data.data;\n  },\n\n  // Get single route by ID\n  async getRoute(id) {\n    const response = await api.get(`/routes/${id}`);\n    return response.data.data.route;\n  },\n\n  // Create new route\n  async createRoute(routeData) {\n    const response = await api.post('/routes', routeData);\n    return response.data.data.route;\n  },\n\n  // Update route\n  async updateRoute(id, routeData) {\n    const response = await api.put(`/routes/${id}`, routeData);\n    return response.data.data.route;\n  },\n\n  // Delete route\n  async deleteRoute(id) {\n    const response = await api.delete(`/routes/${id}`);\n    return response.data;\n  },\n\n  // Get route statistics\n  async getRouteStats() {\n    const response = await api.get('/routes/stats');\n    return response.data.data.stats;\n  },\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG;EAC1B;EACA,MAAMC,SAASA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;IAC3B,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,SAAS,EAAE;MAAEF;IAAO,CAAC,CAAC;IACrD,OAAOC,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACA,MAAMC,QAAQA,CAACC,EAAE,EAAE;IACjB,MAAMJ,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,WAAWG,EAAE,EAAE,CAAC;IAC/C,OAAOJ,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACG,KAAK;EACjC,CAAC;EAED;EACA,MAAMC,WAAWA,CAACC,SAAS,EAAE;IAC3B,MAAMP,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,IAAI,CAAC,SAAS,EAAED,SAAS,CAAC;IACrD,OAAOP,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACG,KAAK;EACjC,CAAC;EAED;EACA,MAAMI,WAAWA,CAACL,EAAE,EAAEG,SAAS,EAAE;IAC/B,MAAMP,QAAQ,GAAG,MAAMlB,GAAG,CAAC4B,GAAG,CAAC,WAAWN,EAAE,EAAE,EAAEG,SAAS,CAAC;IAC1D,OAAOP,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACG,KAAK;EACjC,CAAC;EAED;EACA,MAAMM,WAAWA,CAACP,EAAE,EAAE;IACpB,MAAMJ,QAAQ,GAAG,MAAMlB,GAAG,CAAC8B,MAAM,CAAC,WAAWR,EAAE,EAAE,CAAC;IAClD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMW,aAAaA,CAAA,EAAG;IACpB,MAAMb,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACY,KAAK;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
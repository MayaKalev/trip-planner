{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const tripService = {\n  // Plan a new trip\n  async planTrip(location, tripType) {\n    const response = await api.post('/trip/plan', {\n      location,\n      tripType\n    });\n    return response.data.data;\n  },\n  // Get weather forecast for location\n  async getWeatherForecast(location, days = 3) {\n    const response = await api.get(`/weather/${encodeURIComponent(location)}`, {\n      params: {\n        days\n      }\n    });\n    return response.data.data;\n  },\n  // Get current weather for location\n  async getCurrentWeather(location) {\n    const response = await api.get(`/weather/${encodeURIComponent(location)}/current`);\n    return response.data.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","tripService","planTrip","location","tripType","response","post","data","getWeatherForecast","days","get","encodeURIComponent","params","getCurrentWeather"],"sources":["C:/Users/Gal/Desktop/Trip/Trip/client/src/services/tripService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const tripService = {\n  // Plan a new trip\n  async planTrip(location, tripType) {\n    const response = await api.post('/trip/plan', {\n      location,\n      tripType,\n    });\n    return response.data.data;\n  },\n\n  // Get weather forecast for location\n  async getWeatherForecast(location, days = 3) {\n    const response = await api.get(`/weather/${encodeURIComponent(location)}`, {\n      params: { days },\n    });\n    return response.data.data;\n  },\n\n  // Get current weather for location\n  async getCurrentWeather(location) {\n    const response = await api.get(`/weather/${encodeURIComponent(location)}/current`);\n    return response.data.data;\n  },\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACzB;EACA,MAAMC,QAAQA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACjC,MAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,IAAI,CAAC,YAAY,EAAE;MAC5CH,QAAQ;MACRC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACA,MAAMC,kBAAkBA,CAACL,QAAQ,EAAEM,IAAI,GAAG,CAAC,EAAE;IAC3C,MAAMJ,QAAQ,GAAG,MAAMnB,GAAG,CAACwB,GAAG,CAAC,YAAYC,kBAAkB,CAACR,QAAQ,CAAC,EAAE,EAAE;MACzES,MAAM,EAAE;QAAEH;MAAK;IACjB,CAAC,CAAC;IACF,OAAOJ,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED;EACA,MAAMM,iBAAiBA,CAACV,QAAQ,EAAE;IAChC,MAAME,QAAQ,GAAG,MAAMnB,GAAG,CAACwB,GAAG,CAAC,YAAYC,kBAAkB,CAACR,QAAQ,CAAC,UAAU,CAAC;IAClF,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
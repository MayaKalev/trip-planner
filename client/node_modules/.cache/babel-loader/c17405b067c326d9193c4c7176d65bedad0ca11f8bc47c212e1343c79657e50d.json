{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const tripService = {\n  async planTrip(location, tripType) {\n    const payload = {\n      location: {\n        name: (location === null || location === void 0 ? void 0 : location.name) || '',\n        lat: Number(location === null || location === void 0 ? void 0 : location.lat) || 0,\n        lng: Number(location === null || location === void 0 ? void 0 : location.lng) || 0\n      },\n      tripType\n    };\n    console.log('ðŸŸ¢ planTrip payload before send:', payload);\n    const response = await api.post('/trip/plan', payload, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data.data;\n  },\n  async createRoute(route) {\n    const response = await api.post('/trip/save', route, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","tripService","planTrip","location","tripType","payload","name","lat","Number","lng","console","log","response","post","data","createRoute","route"],"sources":["C:/Users/Gal/Desktop/Trip/Trip/client/src/services/tripService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: { 'Content-Type': 'application/json' },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport const tripService = {\n  async planTrip(location, tripType) {\n    const payload = {\n      location: {\n        name: location?.name || '',\n        lat: Number(location?.lat) || 0,\n        lng: Number(location?.lng) || 0,\n      },\n      tripType,\n    };\n\n    console.log('ðŸŸ¢ planTrip payload before send:', payload);\n\n    const response = await api.post('/trip/plan', payload, {\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    return response.data.data;\n  },\n\n  async createRoute(route) {\n    const response = await api.post('/trip/save', route, {\n      headers: { 'Content-Type': 'application/json' },\n    });\n    return response.data;\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IAAE,cAAc,EAAE;EAAmB;AAChD,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACzB,MAAMC,QAAQA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACjC,MAAMC,OAAO,GAAG;MACdF,QAAQ,EAAE;QACRG,IAAI,EAAE,CAAAH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI,KAAI,EAAE;QAC1BC,GAAG,EAAEC,MAAM,CAACL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,GAAG,CAAC,IAAI,CAAC;QAC/BE,GAAG,EAAED,MAAM,CAACL,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEM,GAAG,CAAC,IAAI;MAChC,CAAC;MACDL;IACF,CAAC;IAEDM,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEN,OAAO,CAAC;IAExD,MAAMO,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,YAAY,EAAER,OAAO,EAAE;MACrDhB,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IAEF,OAAOuB,QAAQ,CAACE,IAAI,CAACA,IAAI;EAC3B,CAAC;EAED,MAAMC,WAAWA,CAACC,KAAK,EAAE;IACvB,MAAMJ,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,IAAI,CAAC,YAAY,EAAEG,KAAK,EAAE;MACnD3B,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC;IACF,OAAOuB,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}